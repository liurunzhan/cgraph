#include "template_struct.ct"

__INLINE cgraph_size_t FUNCTION(NAME, index_i)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_I(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, index_j)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_J(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, index_k)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_K(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, size_i)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_I(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, size_j)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_J(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, size_k)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_K(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, size_ij)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_I(cthis) * CGRAPH_MATRIX3D_INDEX_J(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, size_ik)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_I(cthis) * CGRAPH_MATRIX3D_INDEX_K(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, size_jk)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_J(cthis) * CGRAPH_MATRIX3D_INDEX_K(cthis);
}

__INLINE cgraph_size_t FUNCTION(NAME, size_ijk)(const TYPE *cthis) {
  return CGRAPH_MATRIX3D_INDEX_I(cthis) * CGRAPH_MATRIX3D_INDEX_J(cthis) *
         CGRAPH_MATRIX3D_INDEX_K(cthis);
}

__INLINE cgraph_bool_t FUNCTION(NAME, isempty)(const TYPE *cthis) {
  return CGRAPH_TEST((0 == CGRAPH_MATRIX3D_INDEX_I(cthis)) &&
                     (0 == CGRAPH_MATRIX3D_INDEX_J(cthis)) &&
                     (0 == CGRAPH_MATRIX3D_INDEX_K(cthis)));
}

__INLINE cgraph_bool_t FUNCTION(NAME, isnumber)(const TYPE *cthis) {
  return CGRAPH_TEST((1 == CGRAPH_MATRIX3D_INDEX_I(cthis)) &&
                     (1 == CGRAPH_MATRIX3D_INDEX_J(cthis)) &&
                     (1 == CGRAPH_MATRIX3D_INDEX_K(cthis)));
}

__INLINE cgraph_bool_t FUNCTION(NAME, issquare)(const TYPE *cthis) {
  return CGRAPH_TEST(
      (CGRAPH_MATRIX3D_INDEX_I(cthis) == CGRAPH_MATRIX3D_INDEX_J(cthis)) &&
      (CGRAPH_MATRIX3D_INDEX_I(cthis) == CGRAPH_MATRIX3D_INDEX_K(cthis)));
}

__INLINE cgraph_bool_t FUNCTION(NAME, ismatrix3d_i)(const TYPE *cthis) {
  return CGRAPH_TEST((1 == CGRAPH_MATRIX3D_INDEX_J(cthis)) &&
                     (1 == CGRAPH_MATRIX3D_INDEX_K(cthis)));
}

__INLINE cgraph_bool_t FUNCTION(NAME, ismatrix3d_j)(const TYPE *cthis) {
  return CGRAPH_TEST((1 == CGRAPH_MATRIX3D_INDEX_I(cthis)) &&
                     (1 == CGRAPH_MATRIX3D_INDEX_K(cthis)));
}

__INLINE cgraph_bool_t FUNCTION(NAME, ismatrix3d_k)(const TYPE *cthis) {
  return CGRAPH_TEST((1 == CGRAPH_MATRIX3D_INDEX_I(cthis)) &&
                     (1 == CGRAPH_MATRIX3D_INDEX_J(cthis)));
}

__INLINE cgraph_bool_t FUNCTION(NAME, ismatrix3d_ixj)(const TYPE *cthis) {
  return CGRAPH_TEST(1 == CGRAPH_MATRIX3D_INDEX_K(cthis));
}

__INLINE cgraph_bool_t FUNCTION(NAME, ismatrix3d_ixk)(const TYPE *cthis) {
  return CGRAPH_TEST(1 == CGRAPH_MATRIX3D_INDEX_J(cthis));
}

__INLINE cgraph_bool_t FUNCTION(NAME, ismatrix3d_jxk)(const TYPE *cthis) {
  return CGRAPH_TEST(1 == CGRAPH_MATRIX3D_INDEX_I(cthis));
}

__INLINE cgraph_bool_t FUNCTION(NAME, ismatrix3d)(const TYPE *cthis) {
  return CGRAPH_TEST((1 != CGRAPH_MATRIX3D_INDEX_I(cthis)) &&
                     (1 != CGRAPH_MATRIX3D_INDEX_J(cthis)) &&
                     (1 != CGRAPH_MATRIX3D_INDEX_K(cthis)));
}
