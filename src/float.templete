cgraph_size_t FUNCTION(NAME, hash)(const void *cthis)
{
  TYPE object = *(TYPE *)cthis;
  cgraph_size_t hash;
  if(object != object)
  { hash = 3141592653UL; }
  else if((MAX < object) || (MIN > object))
  { hash = 1234567891UL; }
  else
  {
    TYPE ipart = floor(object), fpart = object - ipart;
    cgraph_size_t hash_ipart = (cgraph_size_t)(ipart), hash_fpart = (cgraph_size_t)(((TYPE)ABS(fpart - EPSILON)) * EPSILON_LEN);
    hash = (hash_ipart << 4) ^ hash_fpart;
  }

  return CGRAPH_ABS(hash);
}

cgraph_boolean_t FUNCTION(NAME, check)(const void *cthis)
{
  cgraph_boolean_t flag = CGRAPH_FALSE;
  if(NULL != cthis)
  {
    TYPE object = *(TYPE *)cthis;
    if(object == object && MAX > object && MIN < object)
    { flag = CGRAPH_TRUE; }
  }

  return flag;
}

cgraph_boolean_t FUNCTION(NAME, equal)(const void *x, const void *y)
{
  TYPE object_x = *(TYPE *)x, object_y = *(TYPE *)y;
  cgraph_boolean_t flag = CGRAPH_FALSE;
  if((CGRAPH_TRUE == FUNCTION(NAME, isnan)(object_x)) && (CGRAPH_TRUE == FUNCTION(NAME,isnan)(object_y)))
  { flag = CGRAPH_TRUE; }
  else if((CGRAPH_TRUE == FUNCTION(NAME, ispinf)(object_x)) && (CGRAPH_TRUE == FUNCTION(NAME, ispinf)(object_y)))
  { flag = CGRAPH_TRUE; }
  else if((CGRAPH_TRUE == FUNCTION(NAME, isninf)(object_x)) && (CGRAPH_TRUE == FUNCTION(NAME, isninf)(object_y)))
  { flag = CGRAPH_TRUE; }
  else if(EQ(object_x, object_y))
  { flag = CGRAPH_TRUE; }

  return flag;
}

TYPE *FUNCTION(NAME, initargs)(TYPE *cthis, const cgraph_size_t size, const TYPE first, ...)
{
  va_list args;
  if((NULL != cthis) && (0 < size))
  {
    cgraph_size_t i = 1;
    va_start(args, first);
    cthis[0] = (TYPE)first;
    for(i=1; i<size; i++)
    { cthis[i] = (TYPE)va_arg(args, TYPE); }
    va_end(args);
  }

  return cthis;
}

cgraph_boolean_t FUNCTION(NAME, isnan)(const TYPE x)
{
  return CGRAPH_TEST((x != x));
}

cgraph_boolean_t FUNCTION(NAME, isinf)(const TYPE x)
{
  return CGRAPH_TEST((x == x) && ((x > MAX) || (x < MIN)));
}

cgraph_boolean_t FUNCTION(NAME, ispinf)(const TYPE x)
{
  return CGRAPH_TEST((x == x) && (x > MAX));
}

cgraph_boolean_t FUNCTION(NAME, isninf)(const TYPE x)
{
  return CGRAPH_TEST((x == x) && (x < MIN));
}

cgraph_boolean_t FUNCTION(NAME, iszero)(const TYPE x)
{
  return CGRAPH_TEST(EQ(x, 0.0));
}

cgraph_boolean_t FUNCTION(NAME, ispos)(const TYPE x)
{
  return CGRAPH_TEST(GR(x, 0.0));
}

cgraph_boolean_t FUNCTION(NAME, isneg)(const TYPE x)
{
  return CGRAPH_TEST(LS(x, 0.0));
}

cgraph_boolean_t FUNCTION(NAME, ismin)(const TYPE x)
{
  return CGRAPH_TEST(EQ(x, MIN));
}

cgraph_boolean_t FUNCTION(NAME, ismax)(const TYPE x)
{
  return CGRAPH_TEST(EQ(x, MAX));
}
