ALL = all
TOOL =
CMD =
COMPILE =
SCRIPT =

# cross platforms
# mingw
# msys
# msys2
# cygwin
# wsl
# linux
# referred by http://www.imooc.com/wenda/detail/584860
ifeq ("$(findstring ;,$(PATH))", ";")
OS := Windows
else
OS := $(shell uname 2>/dev/null || echo Unknown)
OS := $(patsubst CYGWIN%,Cygwin,$(OS))
OS := $(patsubst MSYS%,MSYS,$(OS))
OS := $(patsubst MINGW%,MSYS,$(OS))
endif

ifeq ($(OS), "Windows")
CMAKE_FLAGS = "NMake Makefiles"
else ifeq ($(OS), "CYGWIN")
CMAKE_FLAGS = "Unix Makefiles"
else ifeq ($(OS), "MSYS")
CMAKE_FLAGS = "MSYS Makefiles"
else ifeq ($(OS), "MINGW")
CMAKE_FLAGS = "MinGW Makefiles"
else
CMAKE_FLAGS = "Unix Makefiles"
endif

MY_OS = $(OS)

# Windows cmd is available or not
ifeq ($(shell echo "windows cmd available"), "windows cmd available")
CMD_AVAI := TRUE
else
CMD_AVAI := FALSE
endif

ifeq ($(CMD_AVAI), TRUE)
RM = del
RMFLAGS = /Q /F
MKDIR = mkdir
MKDIRFLAGS =
RMDIR = rd
RMDIRFLAGS = /Q
CP = copy
CPFLAGS = /Y
SEPARATOR = \\
SPLIT = &
else
RM = rm
RMFLAGS = -f
MKDIR = mkdir
MKDIRFLAGS = -p
RMDIR = rm
RMDIRFLAGS = -rf
CP = cp
CPFLAGS =
SEPARATOR = /
SPLIT = ;
endif

SCRDIR = .$(SEPARATOR)tools$(SEPARATOR)script$(SEPARATOR)

ifeq ($(MAKELEVEL), 0)
$(ALL):
	echo "Makefile.sub can not be directly made!"
	exit "$$?"
endif

.PHONY: $(ALL) $(TOOLS)

$(ALL):
ifeq ($(TOOL), cmake)
	$(RM) $(RMFLAGS) compile.* xmake.lua CMakeLists.txt
	$(CP) $(CPFLAGS) $(SCRDIR)$(SCRIPT) .
	$(COMPILE) $(CMD)
	cd ..
else
	$(RM) $(RMFLAGS) compile.* xmake.lua CMakeLists.txt
	$(CP) $(CPFLAGS) $(SCRDIR)$(SCRIPT) .
	$(COMPILE) $(SCRIPT) $(CMD)
endif

$(TOOL): $(ALL)
	

make: SCRIPT = compile.mk
make: COMPILE = $(MAKE) -f
make: TOOL = make

cmake: SCRIPT = CMakeLists.txt
cmake: COMPILE = $(RMDIR) $(RMDIRFLAGS) build; $(MKDIR) $(MKDIRFLAGS) build; cd build; cmake .. -G $(CMAKE_FLAGS); $(MAKE)
cmake: TOOL = cmake

xmake: SCRIPT = xmake.lua
xmake: COMPILE = xmake -F

meson: SCRIPT = meson.build
meson: COMPILE = meson build; python3

ninja: SCRIPT = compile.ninja
ninja: COMPILE = ninja

sh: SCRIPT = compile.sh
sh: COMPILE = sh

zsh: SCRIPT = compile.zsh
zsh: COMPILE = zsh

fish: SCRIPT = compile.fish
fish: COMPILE = fish

cmd: SCRIPT = compile.bat
cmd: COMPILE = cmd

powershell: SCRIPT = compile.ps1
powershell: COMPILE = powershell

perl: SCRIPT = compile.pl
perl: COMPILE = perl

perl6: SCRIPT = compile.pl6
perl6: COMPILE = perl6

ruby: SCRIPT = compile.rb
ruby: COMPILE = ruby

python: SCRIPT = compile.py
python: COMPILE = python

lua: SCRIPT = compile.lua
lua: COMPILE = lua

r: SCRIPT = compile.r
r: COMPILE = Rscript

julia: SCRIPT = compile.jl
julia: COMPILE = julia

java: SCRIPT = compile.java
java: COMPILE = java --source 11

scala: SCRIPT = compile.scala
scala: COMPILE = scala

kotlin: SCRIPT = compile.kts
kotlin: COMPILE = kotlin

clojure: SCRIPT = compile.clj
clojure: COMPILE = lein-exec

groovy: SCRIPT = compile.groovy
groovy: COMPILE = groovy