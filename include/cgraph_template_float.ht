/**
 * @file cgraph_template_float.ht
 * @brief the template apis of float point number
 * @author liurunzhan
 * @email liurunzhan@sina.com
 * @package cgraph
 * @version 0.0.0
 * @date 2021-03-31
 * @lisence GPL-3.0
 */

#include "cgraph_template_data.ht"

extern TYPE FUNCTION(NAME, sqrt)(const TYPE x);
extern TYPE FUNCTION(NAME, cube)(const TYPE x);
extern TYPE FUNCTION(NAME, exp)(const TYPE x);
extern TYPE FUNCTION(NAME, pi)(void);

extern cgraph_int_t FUNCTION(NAME, fexp)(const TYPE x);

extern TYPE FUNCTION(NAME, Eqt_binary_search)(const TYPE start, const TYPE end,
                                              FUNCPTR(NAME, pfunc1) func);
extern TYPE FUNCTION(NAME, Eqt_secant_method)(const TYPE start, const TYPE end,
                                              FUNCPTR(NAME, pfunc1) func);
extern TYPE FUNCTION(NAME, Eqt_inverse_interpolation)(const TYPE start,
                                                      const TYPE end,
                                                      FUNCPTR(NAME, pfunc1)
                                                          func);
extern TYPE FUNCTION(NAME, Eqt_fixed_point)(const TYPE x,
                                            FUNCPTR(NAME, pfunc1) func);
extern TYPE FUNCTION(NAME, Eqt_fixed_point_lambda)(const TYPE x,
                                                   const TYPE lambda,
                                                   FUNCPTR(NAME, pfunc1) func);

extern TYPE FUNCTION(NAME, Diff)(const TYPE x, const TYPE step,
                                 FUNCPTR(NAME, pfunc1) func);
extern TYPE FUNCTION(NAME,
                     Diff_runge_kutta_s4)(const TYPE x_start, const TYPE x_end,
                                          const TYPE y_start, const TYPE step,
                                          FUNCPTR(NAME, pfunc2) func);
extern TYPE FUNCTION(NAME, Diff_kutta_s4)(const TYPE x_start, const TYPE x_end,
                                          const TYPE y_start, const TYPE step,
                                          FUNCPTR(NAME, pfunc2) func);
extern TYPE FUNCTION(NAME, Int_range_trapezoidal)(const TYPE start,
                                                  const TYPE end,
                                                  const TYPE step,
                                                  FUNCPTR(NAME, pfunc1) func);
extern TYPE FUNCTION(NAME, Int_range_simpson)(const TYPE start, const TYPE end,
                                              const TYPE step,
                                              FUNCPTR(NAME, pfunc1) func);
extern TYPE FUNCTION(NAME, Int_range_simpson38)(const TYPE start,
                                                const TYPE end, const TYPE step,
                                                FUNCPTR(NAME, pfunc1) func);
extern TYPE FUNCTION(NAME, Int_range_cotes)(const TYPE start, const TYPE end,
                                            const TYPE step,
                                            FUNCPTR(NAME, pfunc1) func);

extern TYPE FUNCTION(NAME, logistic)(const TYPE x);
extern TYPE FUNCTION(NAME, gamma)(const TYPE x, const TYPE step);
extern TYPE FUNCTION(NAME, beta)(const TYPE x, const TYPE step);
